	
(& INPUT FORMAT) 	
(& NORMALLY ALL CHARACTERS COMING IN AT THE INTERFACE PORT ARE DISPLAYED ON THE) 	
(& TEXT DISPLAY) 	
(& GRAPHICS COMMANDS ARE PREFACED BY AN ESCAPE CHARACTER 33 OCTAL) 	
(& SPECIAL CHARACTERS) 	
(CALL 0 NUL-CHR & NULL) 	
(CALL 1 HM-CHR & CURSOR TO TOP OF SCREEN) 	
(CALL 2 BL-CHR & CURSOR TO START OF LINE) 	
(CALL 4 RUBOUT & DELETES LAST DISPLAYED CHR) 	
(CALL 5 END-LINE & CURSOR TO END OF CURRENT LINE) 	
(CALL 6 RT-CHR & CURSOR RIGHT) 	
(CALL 7 BEL-CHR & FLASH SCREEN) 	
(CALL 10 BS-CHR & BACK SPACE) 	
(CALL 11 TAB-CHR & TAB MOD 10) 	
(CALL 14 P-CLR-CHR & HOME CLEAR OF PAGE) 	
(CALL 15 CR-CHR & NEW LINE) 	
(CALL 21 QUOTE-CHR & NEXT CHR HAS NO SPECIAL MEANING) 	
(CALL 33 FLAG-CHR & ESCAPE TO COMMAND MODE) 	
(CALL 177 DEL-CHR & DELETE IS JUST LIKE NULL) 	
(& CHARACTERS BETWIXT 100 AND 137 OCTAL INCLUSIVE ARIVING AFTER AN ESCAPE WILL) 	
(& BE EXPECTED IN GROUPS OF THREE THE 5 LEAST SIGNIFICANT BITS OF THESE 3 CHRS WILL) 	
(& BE CONS UP INTO A 15 BIT DISPLAY LIST INSTRUCTION LAST CHR IS LEAST SIGNIFICANT) 	
(& THIS DISPLAY INSTRUCTION IS ADDED TO THE TOP OF THE DISPLAY LIST) 	
(& OP CODES ARE AS FOLLOWS) 	
(& /000 00X XXX XXX XXX NOP) 	
(& /000 /100 0XX XXX XXX HOME) 	
(& /000 /100 1XX XXX /000 PENDONW) 	
(& /000 /100 1XX XXX /001 SMALL DOT) 	
(& /000 /100 1XX XXX /010 DOT) 	
(& /000 /100 1XX XXX /011 WIDE DOT) 	
(& /000 /100 1XX XXX /100 DASH) 	
(& /000 /100 1XX XXX /101 DASH DOT) 	
(& /000 /100 1XX XXX /110 WIDE DASH) 	
(& /000 /100 1XX XXX /111 PENDOWN) 	
(& /000 /101 0XX XXX XX1 SHOWTURTLE) 	
(& /000 /101 0XX XXX /000 HIDETURTLE) 	
(& /000 /101 1XX XXX XXX ENDSNAP) 	
(& /000 /110 0XX XXX XXX BLINK) 	
(& /000 /110 1XX XXX XX0 WRAP) 	
(& /000 /110 1XX XXX XX1 BOUNCE) 	
(& /000 /111 0XX XXX XXX RESET) 	
(& /000 /111 1XX XXX XXX NOP) 	
(& /001 0DD DDD DDD DDD FORWARD DISTANCE) 	
(& /001 1AA AAA AAA AAA RIGHT ANGLE) 	
(& /010 0HH HHH HHH HHH SETHEADING HEADING) 	
(& /010 1SS SSS SSS SSS MOVE SPEED) 	
(& /011 0SS SSS SSS SSS SPIN SPEED) 	
(& /011 1XX XXX XXX XXX DISPLAY ADDRESS IN NEXT WORD) 	
(& /100 0CC CCC CCC CCC SETXY XCOR YCOR IN NEXT WORD) 	
(& /100 1DD DDD DDD DDD DELTAXY DX DY IN NEXT WORD) 	
(& /101 /000 /000 /000 /000 CLEARSCREEN) 	
(& /101 01N NNN NNN NNN REMOVE /-N INSTRUCTIONS FROM THE DISPLAY LIST) 	
(& 11X XXX XXX XXX XXX NOP) 	
(& GRAHIC REGISTER ALLOCATION) 	
(CALL 2 XPOS & LSB (QUOTE S) OF X POSITION) 	
(CALL 3 YPOS & LSB (QUOTE S) OF Y POSITION) 	
(CALL 4 SIN & SINE OF HEADING) 	
(CALL 5 COS & COSE OF HEADING) 	
(CALL 6 HEADING & HEADING OF TURTLE) 	
(CALL 7 PC & POINTER TO DISPLAY LIST INSTRUTION BEING EXECUTED) 	
(& SCRATCH PAD ALLOCATION) 	
(CALL 40 ISAV-1 & FOR SAVING REGS DURING INTERRUPTS) 	
(CALL 41 ISAV-2) 	
(CALL 42 ISAV-3) 	
(CALL 43 ISAV-4) 	
(CALL 44 ISAV-5) 	
(CALL 45 SCRATCH & NEVER TRUST A SUBR WITH THIS ONE) 	
(CALL 46 TOP-LINE & TOP LINE ON SCREEN) 	
(CALL 47 SCR-VALUE & SCROLL) 	
(CALL 50 BACK-SCRATCH & NOT FOR SCRATCHING BACKS BUT FOR BACK (QUOTE S) SCRATCHING) 	
(CALL 51 CONS-CELL & FOR CONSING UP DISPAY INSTRUCTIONS) 	
(CALL 52 READ-STATE & DEPENDS ON WHAT CHARS HAVE COME IN) 	
(CALL 53 SNAP-STACK & POINTER TO MACRO STACK) 	
(CALL 54 MOVE-PEN & STOREING PEN-STATE WHILE IN MOVE) 	
(CALL 57 SPIN-ANGLE & LIKE CLOCK MODE 360) 	
(CALL 60 WRAP-MODE & ONE IF TURTLE SHOULD WRAP ELSE ZERO) 	
(CALL 61 SYNCH-FLAG & SYMAPHORE TO SYNCHRONIZE REFRESH AND CLOCK) 	
(CALL 62 CLOCK & TIME INCREMENTED EVERY CLOCK CYCLE) 	
(CALL 63 IN-BUFFER & COMMUNICATIONS LINK INPUT BUFFER POINTER) 	
(CALL 64 OUT-BUFFER & COMMUNICATIONS LINK OUTPUT BUFFER) 	
(CALL 65 DISPLAY-TOP & TOP OF DISPLAY LIST) 	
(CALL 66 DSR-STATE & COPY OF DISPLAY STATUS REGISTER) 	
(CALL 67 TURTLE-STATE & ZERO IF TURTLE IS HIDDEN ELSE MINUS ONE) 	
(CALL 70 LINE) 	
(CALL 71 CRSR-LINE) 	
(CALL 72 CRSR-COL) 	
(CALL 73 CRSR-REPL) 	
(CALL 74 OLD-REPL) 	
(CALL 76 BELL-TIME) 	
(CALL 77 COLOR) 	
(& MEMORY ALLOCATION) 	
(CALL 0 TRIG-TABLE-START) 	
(CALL 133 IN-BUFFER-START) 	
(CALL 144 SNAP-STACK-START) 	
(CALL 170 SNAP-STACK-END) 	
(CALL 170 DISPLAY-LIST-START) 	
(CALL 5546 SNAP-BUFFER-START) 	
(CALL 5546 TEXT-START) 	
(& INTERUPT SERVICE ROUTINE) 
	SERV-INTERUPT	140	76040	(PUT 0 ISAV-1 & IT IS ORE BLESSED TO SERVE THAN TO RECIEVE)
			141	76141	(PUT 1 ISAV-2)
			142	73200	(DIS INTS 7)
			143	50143	(ERROR & INTERUPT WENT AWAY)
			144	51117	(JUMP TV-LINE & TEXTDISPLAY IS 1)
			145	50320	(JUMP SERV-IN & CHARACTER COMING IN ON INTERFACE)
			146	51117	(JUMP TV-LINE & TV-LINE HAS PRIORITY)
			147	50304	(JUMP SERV-CLOCK & 60TH OF A SEC INTERUPT)
			150	51117	(JUMP TV-LINE & TV-LINE HAS PRIORITY)
			151	50304	(JUMP SERV-CLOCK & CLOCK HAS PRIORITY)
			152	51117	(JUMP TV-LINE & THOU SHALT HAVE NO OTHER BEFOR HIM)	
(& INITIALIZE ALL) 
	START		153	40155	(PUSHJ INIT & WE HOPE THIS IS A NOP)
			154	50154	(ERROR & CAUSE THIS MEANS STACK UNDERFLOW)
	INIT		155	6000	(SUB 0 0)
			156	76051	(PUT 0 CONS-CELL)
			157	76052	(PUT 0 READ-STATE)
			160	76057	(PUT 0 SPIN-ANGLE)
			161	76062	(PUT 0 CLOCK)
			162	76061	(PUT 0 SYNCH-FLAG)
			163	76053	(PUT 0 SNAP-STACK)
			164	76063	(PUT 0 IN-BUFFER)
			165	76060	(PUT 0 WRAP-MODE)
			166	6040	(INC 0)
			167	76067	(PUT 0 TURTLE-STATE)
			170	60	(NOR 0 0)
			171	76064	(PUT 0 OUT-BUFFER)
			172	1000	(LOD 0)
			173	170	(DISPLAY-LIST-START)
			174	76065	(PUT 0 DISPLAY-TOP)
			175	1000	(LOD 0)
			176	377	(377)
			177	76021	(PUT 0 XCOR)
			200	76020	(PUT 0 YCOR)
			201	41341	(PUSHJ TV-INIT)
	NEXT-TIME	202	40466	(PUSHJ CENTER)	
(& MAIN LOOP OF THE DISPLAY PROGRAM) 
	WAIT		203	41115	(PUSHJ CHECK-INTS)
			204	40276	(PUSHJ CHECK-FLAG)
			205	74063	(GET 0 IN-BUFFER & CHECK IF THERE ARE CHARACTERS IN THE BUFFER)
			206	10000	(NOP 0 & GET DOESN'T SET CONDITIONALS)
			207	130004	(BNE SERV-IN-BUFFER & IF NOT WAIT SOME MORE)
			210	74061	(GET 0 SYNCH-FLAG & HAS A 60 CYCLE INTERUPT COME ?)
			211	10000	(NOP 0 & GET DOESN'T SET CONDITIONALS)
			212	137770	(BEQ WAIT & IF SO REFRESH VECTORS)
			213	50367	(JUMP REFRESH)
	SERV-IN-BUFFER	214	4020	(DEC 0 & GET A CHAR FROM FIFO)
			215	76063	(PUT 0 IN-BUFFER & COUNT OF STUFF)
			216	5760	(ADDI PC 0)
			217	133	(IN-BUFFER-START & THE END OF THE BUFFER)
	MOVE-FIFO	220	20702	(READ PC 2 & MOVE DOWN THE BUFFER)
			221	10000	(NOP 0 & **** JUUST TEMP)
			222	24721	(WRITED PC 1)
			223	17007	(CMPI PC)
			224	132	(- IN-BUFFER-START 1)
			225	134002	(BEQ GOBBLER & GOBBLES DOWN A CHARACTER)
			226	74102	(GET 1 2)
			227	50220	(JUMP MOVE-FIFO)
	GOBBLER		230	74152	(GET 1 READ-STATE & HAVE WE JUST GOTTEN A FLAG?)
			231	10100	(NOP 1 & GET DOESN'T SET CONDITIONALS)
			232	120016	(BMI QUOTED & NO SPECIAL MEANING)
			233	134021	(BEQ TEXT-ADD & IF NOT TEXT-ADD CHECK FOR FLAG)
			234	74351	(GET 3 CONS-CELL & GET PREVIOUS WORK)
			235	4313	(ROT 3 13)
			236	1042	(ANDI 0 2 & ADD IN 5 BITS)
			237	37	(37)
			240	4063	(ADD 0 3)
			241	76051	(PUT 0 CONS-CELL & SAVE IT)
			242	4120	(DEC 1 & CHANGE STATE)
			243	76152	(PUT 1 READ-STATE)
			244	133736	(BNE WAIT & MORE TO COME)
			245	74365	(GET 3 DISPLAY-TOP & ADD TO DISPLAY LIST)
			246	26340	(WRITEI 3 0)
			247	76365	(PUT 3 DISPLAY-TOP)
			250	50203	(JUMP WAIT)
	QUOTED		251	6101	(SUB 1 1 & TURN OFF QUOTE MODE)
			252	76152	(PUT 1 READ-STATE)
			253	41503	(PUSHJ TV-QUOTE)
			254	50203	(JUMP WAIT)
	TEXT-ADD	255	17002	(CMPI 2 & CHECK FOR QOTE CHR)
			256	21	(QUOTE-CHR)
			257	134010	(BEQ SET-QUOTE)
			260	17002	(CMPI 2 & CHECK FOR ALT MADE CHAR)
			261	33	(FLAG-CHR)
			262	130011	(BNE TEXT-CHAR & FOR TEXT DISPLAY)
			263	76151	(PUT 1 CONS-CELL & IF SO CLEAR CONS-CELL)
			264	1000	(LOD 0 & MAKE READ-STATE 3)
			265	3	(3)
			266	76052	(PUT 0 READ-STATE)
			267	50203	(JUMP WAIT)
	SET-QUOTE	270	1000	(LOD 0 & TURN ON QUOTE MODE FOR ONE CHR)
			271	-1	(-1)
			272	76052	(PUT 0 READ-STATE)
			273	50203	(JUMP WAIT)
	TEXT-CHAR	274	41410	(PUSHJ TV-CHAR)
			275	50203	(JUMP WAIT)
	CHECK-FLAG	276	72700	(DIS FLAGS 3)
	POP-PLACE	277	75600	(POPJ)
			300	50334	(JUMP SERV-KEY & KEYBOARD IS 1)
			301	50344	(JUMP SERV-OUT & OUTPUT TO INTERFACE IS 2)
			302	40344	(PUSHJ SERV-OUT & DO THEM BOTH)
			303	50334	(JUMP SERV-KEY)
	SERV-CLOCK	304	74062	(GET 0 CLOCK & INCREMENT CLOCK)
			305	6040	(INC 0)
			306	76062	(PUT 0 CLOCK)
			307	74057	(GET 0 SPIN-ANGLE & UPDATE SPIN-ANGLE)
			310	6040	(INC 0)
			311	1100	(LOD 1)
			312	55000	(* 550 100)
			313	41010	(PUSHJ TOO-LOW & NORMALIZE)
			314	76057	(PUT 0 SPIN-ANGLE)
			315	6040	(INC 0 & TO GARRANTEE A NON ZERO-NUMBER)
			316	76061	(PUT 0 SYNCH-FLAG & AND LET REFRESH START IF WAITING)
			317	51213	(JUMP TV-PAGE)
	SERV-IN		320	74063	(GET 0 IN-BUFFER & PUT IT IN FIFO)
			321	5160	(ADDI 1 0)
			322	133	(IN-BUFFER-START)
			323	6040	(INC 0)
			324	76063	(PUT 0 IN-BUFFER)
			325	74024	(GET 0 UART)
			326	1040	(ANDI 0 0 & UART GIVES RANDOM HIGH BITS)
			327	377	(377)
			330	24100	(WRITE 1 0 & UARTS ARE REALLY SLOW)
			331	74040	(GET 0 ISAV-1)
			332	74141	(GET 1 ISAV-2)
			333	75600	(POPJ & SO THIS CAN NOT BE A JUMP CHECK-INTS)
	SERV-KEY	334	74064	(GET 0 OUT-BUFFER & ADD BUFFER IS JUST ONE LONG)
			335	10000	(NOP 0 & GET DOESN'T SET CONDITIONALS)
			336	124556	(BPL CHECK-INTS & BUT YOU CAN TYPE FASTER THAN 60 CPS)
			337	74026	(GET 0 KEY & BUT NOT FASTER THAN 120 CPS)
			340	1040	(ANDI 0 0 & KEYBOARD GIVES RANDOM HIGH BITS)
			341	377	(377 & GIVE UNTO OUTPUT AS INPUT HAS GIVEN TO YOU)
			342	76064	(PUT 0 OUT-BUFFER)
			343	75600	(POPJ)
	SERV-OUT	344	74064	(GET 0 OUT-BUFFER)
			345	10000	(NOP 0 & GET DOESN'T SET CONDITIONALS)
			346	120546	(BMI CHECK-INTS & IS THERE SOMETHING TO SEND OUT?)
	CHOUT		347	1100	(LOD 1 & THIS ROTEN REVERSER *****)
			350	-7	(-7)
			351	76123	(PUT 1 XR & ONLY FOR THE PERMAMA MACHINE ****)
	AGAIN		352	4161	(ADD 1 1)
			353	4001	(ROT 0 1)
			354	124001	(BPL NBIT)
			355	6140	(INC 1)
	NBIT		356	167773	(BXSI AGAIN & END SICK PATCH ****)
			357	76124	(PUT 1 UART & SEND OUT THE CHARACTER)
			360	10100	(NOP 1 & UARTS ARE SLOW)
			361	10100	(NOP 1 & VERY SLOW)
			362	10100	(NOP 1 & VERY VERY SLOW)
			363	1100	(LOD 1 & MAKE A NOTE THAT THE DEED WAS DONE)
			364	-1	(-1)
			365	76164	(PUT 1 OUT-BUFFER & THIS IS A NEGATIVE NUMBER)
			366	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)	
(& REFRESH /- ONCE EVERY 60TH OF A SEC) 
	REFRESH		367	1700	(LOD PC)
			370	170	(DISPLAY-LIST-START)
			371	40466	(PUSHJ CENTER)
			372	76661	(PUT HEADING SYNCH-FLAG & A HANDY ZERO)
			373	74200	(GET XPOS 0)
			374	74300	(GET YPOS 0)
	NEXT		375	22740	(READI PC 0 & INC POINTER AND GET INSTUCTION)
			376	74153	(GET 1 SNAP-STACK & DON'T CHECK DISPLAT TOP INSIDE SNAPS)
			377	10100	(NOP 1 & GET DOESN'T SET CONDITIONS)
			400	130003	(BNE DONT-LOOK-NOW & BUT SOMETHINGS ON THE STACK)
			401	74165	(GET 1 DISPLAY-TOP)
			402	16107	(CMP 1 PC & ARE WE DONE)
			403	120002	(BMI TURTLE & YES DRAW TURTLE)
	DONT-LOOK-NOW	404	40432	(PUSHJ DISPATCH & SO THAT ALL IS SUBR'S)
			405	50375	(JUMP NEXT)
	TURTLE		406	40475	(PUSHJ PEN-DOWN & SHOULD BE DOWN FOR NEXT REFRESH)
			407	74167	(GET 1 TURTLE-STATE & THIS DRAWS A TRIANGULAR TURTLE)
			410	10100	(NOP 1 & GET DOESN'T SET CONDITIONALS)
			411	137570	(BEQ NEXT-TIME & IF IT IS SHOWING)
			412	1700	(LOD PC)
			413	420	(TURTLE-PROG)
	T-LOOP		414	6740	(INC PC)
			415	21000	(CREAD 0)
			416	137563	(BEQ NEXT-TIME & LIST ENDS WITH A 0)
			417	40432	(PUSHJ DISPATCH & EXECUTE IT)
	TURTLE-PROG	420	50414	(JUMP T-LOOP & TAG SHOULD BE HERE)
			421	17646	(17646 & LT 132)
			422	10007	(10000 7 & FD 7)
			423	14207	(14000 207 & RT 207)
			424	10012	(10000 12 & FD 12)
			425	14132	(14000 132 & RT 132)
			426	10012	(10000 12 & FD 12)
			427	14207	(14000 207 & RT 207)
			430	10007	(10000 7 & FD 7)
			431	0	(0 & END-TAG)
	DISPATCH	432	14017	(T ROT 0 -1 & MUST LOOK AT THE MOST SIG BITS)
			433	72000	(DIS BUS 17 & DISPLAY LIST OP CODES)
			434	75600	(POPJ & 0)
			435	50647	(JUMP SETXY & 10)
			436	50675	(JUMP SETHEADING & 4)
			437	75600	(POPJ & 12)
			440	50562	(JUMP FORWARD & 2)
			441	50541	(JUMP CLEAR-DISPLAY & 10)
			442	50701	(JUMP SPIN & 6)
			443	75600	(POPJ & 14)
			444	50454	(JUMP SPECIAL & 1)
			445	50640	(JUMP DELTAXY & 11)
			446	50705	(JUMP MOVE & 5)
			447	75600	(POPJ & 13)
			450	50635	(JUMP RIGHT & 3)
			451	75600	(POPJ & 11)
			452	50522	(JUMP DISPLAY & 7)
			453	75600	(POPJ & 15)
	SPECIAL		454	14013	(T ROT 0 -5 & LOOK AT NEXT MOST SIG BITS)
			455	72200	(DIS BUS 7 & SPECIAL DISPLAY LIST OP CODES)
			456	50467	(JUMP HOME & 0)
			457	50554	(JUMP BLINK & 4)
			460	50501	(JUMP SET-TURTLE & 2)
			461	50155	(JUMP INIT & 6)
			462	50476	(JUMP SET-PEN & 1)
			463	50505	(JUMP SET-WRAP & 5)
			464	50511	(JUMP ENDSNAP & 3)
			465	75600	(POPJ & 7)	
(& DISPLAY LIST INSTRUCTIONS) 	
(& SPECIAL INSTRUNTIONS FIRST) 
	CENTER		466	40770	(PUSHJ T-PENUP)
	HOME		467	1400	(LOD SIN & CENTER OF SCREEN)
			470	377	(377)
			471	74504	(GET COS SIN)
			472	6606	(SUB 6 6 & SO STXY WILL DO A SETHEADING 0)
			473	40657	(PUSHJ STXY)
			474	50765	(JUMP RESTORE-DSR)
	PEN-DOWN	475	6000	(SUB 0 0)
	SET-PEN		476	40772	(PUSHJ SET-DSR-PEN)
			477	76066	(PUT 0 DSR-STATE)
			500	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)
	SET-TURTLE	501	1040	(ANDI 0 0 & ONE TO SHOW TURTLE 0 TO HIDE HER)
			502	1	(1)
			503	76067	(PUT 0 TURTLE-STATE)
			504	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)
	SET-WRAP	505	1040	(ANDI 0 0 & ONE SHE WRAPS ZERO SHE DON'T)
			506	1	(1)
			507	76060	(PUT 0 WRAP-MODE)
			510	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)
	ENDSNAP		511	74153	(GET 1 SNAP-STACK & THIS IS A MACRO POPJ)
			512	10100	(NOP 1 & GET DOESN'T SET CONDITIONALS)
			513	134354	(BEQ MAKE-SNAP & ATTEMPT TO POP MEANS MAKE A SNAP)
			514	4120	(DEC 1)
			515	76153	(PUT 1 SNAP-STACK)
			516	5161	(ADDI 1 1)
			517	144	(SNAP-STACK-START)
			520	20107	(READ 1 PC)
			521	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)
	DISPLAY		522	40723	(PUSHJ FETCH-ARG & GETS ARG FROM NEXT WD)
			523	10100	(NOP 1)
			524	137552	(BEQ POP-PLACE & END OF DISPLAY LIST)
			525	74153	(GET 1 SNAP-STACK)
			526	5161	(ADDI 1 1)
			527	144	(SNAP-STACK-START)
			530	17001	(CMPI 1)
			531	170	(SNAP-STACK-END)
	ERR5		532	137777	(BEQ ERR5)
			533	24107	(WRITE 1 PC)
			534	74700	(GET PC 0)
			535	74153	(GET 1 SNAP-STACK)
			536	6140	(INC 1)
			537	76153	(PUT 1 SNAP-STACK)
			540	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)
	CLEAR-DISPLAY	541	41002	(PUSHJ GETARG & FOR CLEARING DISPLAY LIST)
			542	10000	(NOP 0 & NEGATIVE ARG MEANS ITS A DELTA)
			543	124004	(BPL SET-TOP & POSITIVE VAULES BECOME NEW LENGTH)
			544	74165	(GET 1 DISPLAY-TOP)
			545	4061	(ADD 0 1)
			546	4020	(DEC 0 & TO FLUSH ITSELF)
			547	50552	(JUMP PUT-TOP)
	SET-TOP		550	5060	(ADDI 0 0)
			551	170	(DISPLAY-LIST-START)
	PUT-TOP		552	76065	(PUT 0 DISPLAY-TOP)
			553	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)
	BLINK		554	74162	(GET 1 CLOCK & BLINKS AT ABOUT TWICE A SEC)
			555	4105	(ROT 1 5)
			556	123716	(BMI PEN-DOWN)
	PEN-UP		557	1000	(LOD 0)
			560	7	(7)
			561	50476	(JUMP SET-PEN)
	FORWARD		562	41002	(PUSHJ GETARG & GET SIGNED ARG)
	FD-BK		563	10000	(NOP 0)
			564	124011	(BPL FD & BUT UNLESS IT IS POSITIVE)
			565	40567	(PUSHJ INVERT-STUFF & INVERT SIN COS AND DISTANCE)
			566	40576	(PUSHJ FD & DID YOU NOTICE THE TRICKY SUBROUTINE CALL?)
	INVERT-STUFF	567	7000	(SUBI 0 0 & UN DO IT WITH THE SAME CODE)
			570	0	(0)
			571	7404	(SUBI SIN SIN)
			572	0	(0)
			573	7505	(SUBI COS COS)
			574	0	(0)
			575	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)
	FD		576	4060	(ADD 0 0 & SHIFT)
			577	7000	(SUBI 0 0 & COMPLEMENT)
			600	0	(0)
			601	76023	(PUT 0 XR)
			602	10000	(NOP 0 & MUST KEEP IT ON THE BUS)
	CONTINUE-FD	603	75400	(MAGIC & MAGIC VECTOR INSTRUCTION)
			604	4365	(ADD 3 5 & AND ITS HELPER)
			605	10000	(NOP 0)
			606	10000	(NOP 0)
			607	73740	(DIS STARS 1 & SKIP IF NOT WRAP)
			610	50612	(JUMP OFF-SCREEN)
			611	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)
	OFF-SCREEN	612	74021	(GET 0 XCOR & SO WE CAN SEE IF IT WRAPS AGAIN)
			613	1040	(ANDI 0 0 & IT SHOULD BE JUST NINE BITS)
			614	777	(777)
			615	76021	(PUT 0 XCOR)
			616	74020	(GET 0 YCOR)
			617	1040	(ANDI 0 0)
			620	777	(777)
			621	76020	(PUT 0 YCOR)
			622	74060	(GET 0 WRAP-MODE & WHAT MADE ARE WE IN?)
			623	10000	(NOP 0 & GET DOESN'T SET CONDITIONALS)
			624	130270	(BNE CHECK-INTS & 1 IS FALL MODE)
	WRAP		625	40770	(PUSHJ T-PENUP & WRAP IS ON WHENN SET)
			626	1000	(LOD 0)
			627	400	(400 & WRAP DELAY JUST A GUESS)
	WRAP-LOOP	630	41115	(PUSHJ CHECK-INTS & KILL ENOUGH TIME TO GET AROUND)
			631	4020	(DEC 0)
			632	127775	(BPL WRAP-LOOP)
			633	40765	(PUSHJ RESTORE-DSR)
			634	50603	(JUMP CONTINUE-FD & WE ALL SHOULD)
	RIGHT		635	41002	(PUSHJ GETARG & GET SIGNED ARGUMENT)
	RT		636	4066	(ADD 0 HEADING & JUMP HERE IF YOU HAVE YOU ARG IN ZERO)
			637	50676	(JUMP SETH)
	DELTAXY		640	41002	(PUSHJ GETARG & DELTA X IS IN WORD)
			641	74400	(GET SIN 0)
			642	40723	(PUSHJ FETCH-ARG & DELTA Y IS NEXT IN LINE)
			643	10100	(NOP 1)
			644	134250	(BEQ CHECK-INTS & BUT MAY NOT HAVE ARRIVED YET)
			645	74500	(GET COS 0)
			646	50667	(JUMP DELXY & DO THE DEED)
	SETXY		647	41002	(PUSHJ GETARG & FIRST ARG IN THIS WORD)
			650	5460	(ADDI SIN 0 & NEW X STORED IN SIN)
			651	377	(377 & IN PEOPLE CORDIATES)
			652	40723	(PUSHJ FETCH-ARG & A TWO WORD INSTRUCTION)
			653	10100	(NOP 1)
			654	134240	(BEQ CHECK-INTS & OTHER ARG NOT THERE YET)
			655	5560	(ADDI COS 0 & NEW Y STORED IN COS)
			656	377	(377)
	STXY		657	74021	(GET 0 XCOR & JUMP HERE IF ARGS ARE IN SIN AND COS)
			660	1040	(ANDI 0 0 & THOW SHALT NOT BE RANDOM)
			661	777	(777 & IN THINE HIGHEST PLACES)
			662	74120	(GET 1 YCOR & LEST THY LOWEST BITS BE RANDOM LIKEWISE)
			663	1141	(ANDI 1 1)
			664	777	(777)
			665	6400	(SUB SIN 0 & DETLA X)
			666	6501	(SUB COS 1 & DELTA Y)
	DELXY		667	4411	(ROT SIN 11 & JUMP HERE WITH ARGS IN SIN AND COS)
			670	4511	(ROT COS 11)
			671	1000	(LOD 0 & ALWAYS GOES 400 STEPS)
			672	400	(400 & THERE IS ROOM FOR IMPROVEMENT HERE)
			673	40576	(PUSHJ FD)
			674	51020	(JUMP TRIG-LOOKUP & RESTORE SIN AND COS)
	SETHEADING	675	41002	(PUSHJ GETARG & LEAVE SIGNED ARGUMENT IN ZERO)
	SETH		676	41006	(PUSHJ NORMALIZE & PUSHJ TO HERE IF ARG IS ALREADY IN ZERO)
			677	74600	(GET HEADING 0 & BEND DOWN AND TOUCH YOUR TOES)
			700	51020	(JUMP TRIG-LOOKUP & GET SIN AND COS)
	SPIN		701	41002	(PUSHJ GETARG)
			702	74157	(GET 1 SPIN-ANGLE & JUST A TIME DEPENDENT RIGHT)
			703	40727	(PUSHJ POS-MULTIPLY)
			704	50636	(JUMP RT & NOTH'N TO IT)
	MOVE		705	76045	(PUT 0 SCRATCH)
			706	40770	(PUSHJ T-PENUP)
			707	74166	(GET 1 DSR-STATE & OLD STATE IS)
			710	76154	(PUT 1 MOVE-PEN & WHAT TO RESTORE THE PEN TO)
			711	76066	(PUT 0 DSR-STATE & SO PEN WON (QUOTE T) COME UP WHILE WRAPING)
			712	74045	(GET 0 SCRATCH)
			713	41002	(PUSHJ GETARG)
			714	74162	(GET 1 CLOCK)
			715	40727	(PUSHJ POS-MULTIPLY & THIS IS SIMPLE BUT HAS A BUG)
			716	74001	(GET 0 1 & TURTLE WILL JERK WHILE MOVING ON AN ANGLE)
			717	40563	(PUSHJ FD-BK)
			720	74054	(GET 0 MOVE-PEN)
			721	76066	(PUT 0 DSR-STATE & RESTORE)
			722	50766	(JUMP PUT-DSR)	
(& UTILITY SUBRS) 
	FETCH-ARG	723	74165	(GET 1 DISPLAY-TOP & GET ARG FROM NEXT WORD IN DISPLAY LIST)
			724	6107	(SUB 1 PC & LEAVE EQ FLAG SET IF ARG NOT THERE)
			725	22740	(READI PC 0)
			726	75600	(POPJ)
	POS-MULTIPLY	727	76245	(PUT 2 SCRATCH & POS NUM IN 1 TIMES NUM IN 0 TO 0)
			730	1200	(LOD 2)
			731	-17	(-17)
			732	76223	(PUT 2 XR & WE USE THE IR TO ITERATE 16 TIMES)
			733	10000	(NOP 0 & IF NUMBER IN ZERO IS NEG)
			734	124007	(BPL BOTH-POS)
			735	40741	(PUSHJ CMPL0 & CMPLEMENT IT)
			736	40744	(PUSHJ BOTH-POS & MULTIPLY)
			737	7101	(SUBI 1 1 & COMPLEMENT THE SHORT ANSWER)
			740	0	(0)
	CMPL0		741	7000	(SUBI 0 0 & AND CMPLEMENT ANSWER)
			742	0	(0)
			743	75600	(POPJ)
	BOTH-POS	744	6202	(SUB 2 2 & RESULT WILL APPEAR HERE)
	POS-MULT-LOOP	745	4262	(ADD 2 2 & CLEARS THE CARRY)
			746	4141	(XADD 1 1 & REG ONE MUST BE POSITIVE)
			747	34260	(IFC ADD 2 0 & REG ZERO CAN BE EITHER)
			750	36140	(IFC INC 1 & TO PUT THE HIGH BITS IN 1)
			751	167773	(BXSI POS-MULT-LOOP)
			752	4206	(ROT 2 6 & GET NUMBER DIVED BY 100 IN 0)
			753	1042	(ANDI 0 2 & TEN BITS COME FROM THIS WORD)
			754	1777	(1777)
			755	1141	(ANDI 1 1 & SIX FROM THIS ONE)
			756	77	(77)
			757	4106	(ROT 1 6)
			760	4061	(ADD 0 1)
			761	1140	(ANDI 1 0 & ONLY 11 BITS FOR MOVE)
			762	777	(777 & DO IT HERE SO THE SIGN IS RIGHT)
			763	74245	(GET 2 SCRATCH)
			764	75600	(POPJ)
	RESTORE-DSR	765	74066	(GET 0 DSR-STATE)
	PUT-DSR		766	76025	(PUT 0 DSR)
			767	75600	(POPJ)
	T-PENUP		770	1000	(LOD 0 & TEMPORARY PEN UP)
			771	7	(7)
	SET-DSR-PEN	772	74166	(GET 1 DSR-STATE)
			773	1141	(ANDI 1 1)
			774	17777	(17777)
			775	1040	(ANDI 0 0)
			776	7	(7)
			777	4003	(ROT 0 3)
			1000	4061	(ADD 0 1)
			1001	50766	(JUMP PUT-DSR)
	GETARG		1002	4013	(ROT 0 13 & EXTRACTS 11 BIT SIGNED ARG FROM 0)
			1003	6063	(ARS 0 3)
			1004	6062	(ARS 0 2)
			1005	75600	(POPJ)
	NORMALIZE	1006	1100	(LOD 1 & NORMALIZES -1 < REG 0 < 550)
			1007	550	(550)
	TOO-LOW		1010	10000	(NOP 0 & JUMP HERE FOR OTHER NORMS)
			1011	124002	(BPL TOO-HIGH)
			1012	4061	(ADD 0 1)
			1013	51010	(JUMP TOO-LOW & KEEP ADDING REG 1 UNTIL IT IS POSITIVE)
	TOO-HIGH	1014	6001	(SUB 0 1 & DONE LIKE THIS TO SAVE REGISTERS)
			1015	127776	(BPL TOO-HIGH)
			1016	4061	(ADD 0 1)
			1017	75600	(POPJ)
	TRIG-LOOKUP	1020	74106	(GET 1 HEADING & FINDS SIN AND COS OF HEADING)
			1021	1000	(LOD 0 & FROM 110 WORD SINE TABLE)
			1022	132	(132)
			1023	6100	(SUB 1 0 & WHICH QUADRANT?)
			1024	120007	(BMI QUAD1)
			1025	6100	(SUB 1 0)
			1026	120011	(BMI QUAD2)
			1027	6100	(SUB 1 0)
			1030	120013	(BMI QUAD3)
			1031	6100	(SUB 1 0)
			1032	120015	(BMI QUAD4)
			1033	51033	(ERROR & HEADING IS NOT LESS THAN 360)
	QUAD1		1034	41054	(PUSHJ GETTRIG & THIS WILL GET THE RIGHT MAGINTUDES)
			1035	4460	(ADD SIN 0 & BUT THEY NEED TO BE SORTED WITH)
			1036	4561	(ADD COS 1 & REAGARD TO SIGN AND PHASE)
			1037	75600	(POPJ)
	QUAD2		1040	41054	(PUSHJ GETTRIG)
			1041	4461	(ADD SIN 1)
			1042	6500	(SUB COS 0)
			1043	75600	(POPJ)
	QUAD3		1044	41054	(PUSHJ GETTRIG)
			1045	6400	(SUB SIN 0)
			1046	6501	(SUB COS 1)
			1047	75600	(POPJ)
	QUAD4		1050	41054	(PUSHJ GETTRIG)
			1051	6401	(SUB SIN 1)
			1052	4560	(ADD COS 0)
			1053	75600	(POPJ)
	GETTRIG		1054	4160	(ADD 1 0 & JUST TO GET THINGS POSITIVE)
			1055	5061	(ADDI 0 1)
			1056	0	(TRIG-TABLE-START)
			1057	20004	(READ 0 4 & GETS THE FUNCTION WITH POSITIVE DERIVATIVE)
			1060	7001	(SUBI 0 1)
			1061	132	(+ TRIG-TABLE-START 132)
			1062	20005	(READ 0 5 & FUCTION WITH MINUS DERIVATIVE)
			1063	74004	(GET 0 4 & POS SLOPE)
			1064	74105	(GET 1 5 & NEG SLOPE)
			1065	6404	(SUB SIN SIN)
			1066	6505	(SUB COS COS)
			1067	75600	(POPJ)
	MAKE-SNAP	1070	74065	(GET 0 DISPLAY-TOP & SNAP IS TWO WORDS)
			1071	16007	(CMP 0 PC & AND DEY BOTH GOTTA BE DER)
			1072	134022	(BEQ CHECK-INTS)
			1073	20720	(READD PC 0 & POINTER TO TOP OF DATA TO BE COPIED)
			1074	5167	(ADDI 1 PC & FIND THE LENGTH OF THE DISPLAY LIST)
			1075	-170	(- DISPLAY-LIST-START)
			1076	4160	(ADD 1 0 & POINTER TO TOP OF NEW COPY)
	MOVE-SNAP	1077	20720	(READD PC 0 & COPY LOOP)
			1100	10000	(NOP 0 & **** JUST TEMP)
			1101	24120	(WRITED 1 0)
			1102	17007	(CMPI PC)
			1103	167	(- DISPLAY-LIST-START 1)
			1104	133772	(BNE MOVE-SNAP)
			1105	6740	(INC PC)
			1106	6140	(INC 1)
	FLUSH-OLIST	1107	1000	(LOD 0 & REPLACE IT WITH A DISPLAY INSTRUCTION)
			1110	34000	(34000)
			1111	26740	(WRITEI PC 0 & NOTE THIS CAN LOOSE A VECTOR OR SO AT FAST DATA RATES)
			1112	26741	(WRITEI PC 1)
			1113	76765	(PUT PC DISPLAY-TOP)
			1114	51115	(JUMP CHECK-INTS & SHOULD BE POPJI)
	CHECK-INTS	1115	153022	(BIS SERV-INTERUPT)
			1116	75600	(POPJ)	
(& TEXT DISPLAY INTERRUPT ROUTINES) 	
(CALL 200 BLANK) 	
(CALL 202 CRSR-IMAGE) 	
(CALL 203 CRSR-COMPL) 	
(CALL 10000 TV-STATE) 	
(CALL 167777 TV-STATE-BAR) 	
(CALL 6000 TV-OPTIONS) 	
(CALL 171777 TV-OPTIONS-BAR) 	
(CALL 0 COLR) 	
(CALL 1 ADR) 	
(CALL 3 DATA) 	
(CALL 4 BLNK) 
	TV-LINE		1117	74077	(GET COLR COLOR)
			1120	10000	(NOP COLR)
			1121	120050	(BMI LINE-END & IF WE (QUOTE RE) NOT DISPLAYING)
			1122	76342	(PUT DATA ISAV-3)
			1123	74170	(GET ADR LINE & START OF CURRENT LINE)
			1124	22143	(READI ADR DATA)
			1125	76370	(PUT DATA LINE & START OF NEXT LINE)
			1126	22143	(READI ADR DATA & CHAR COUNT OF CURRENT LINE)
			1127	10300	(NOP DATA)
			1130	134050	(BEQ LINE-EMPTY)
			1131	76443	(PUT BLNK ISAV-4 & SAVE IT)
			1132	74423	(GET BLNK XR)
			1133	76444	(PUT BLNK ISAV-5 & SAVE XR)
			1134	7303	(SUBI DATA DATA & XR COUNTS UP TO ZERO)
			1135	1	(1)
			1136	76323	(PUT DATA XR)
			1137	41204	(PUSHJ SET-DSR & UPDATE DISPLAY STATUS)
			1140	5061	(ADDI COLR ADR & THE END OF THE LINE)
			1141	44	(44)
			1142	1400	(LOD BLNK)
			1143	200	(BLANK)
	GET-WORD	1144	22143	(READI ADR DATA)
			1145	75503	(CHARTV DATA & CHAR-TV INSTRUCTION)
			1146	74303	(GET DATA DATA & YEECH!)
			1147	4310	(ROT DATA 10)
			1150	160025	(BXCI HALF-WORD)
			1151	75503	(CHARTV DATA)
			1152	74303	(GET DATA DATA & YEECH!)
			1153	167770	(BXSI GET-WORD)
	WHOLE-WORD	1154	16100	(CMP ADR COLR & SEE IF AT END OF LINE)
			1155	134007	(BEQ NO-BLANKS)
	BLANK-LOOP	1156	75504	(CHARTV BLNK)
			1157	74404	(GET BLNK BLNK & DOUBLE YEECH!)
			1160	6140	(INC ADR)
			1161	75504	(CHARTV BLNK)
			1162	74404	(GET BLNK BLNK & NOT ANOTHER ONE)
			1163	16100	(CMP ADR COLR)
			1164	133771	(BNE BLANK-LOOP)
	NO-BLANKS	1165	74444	(GET BLNK ISAV-5)
			1166	76423	(PUT BLNK XR)
			1167	74443	(GET BLNK ISAV-4)
	LINE-DONE	1170	74342	(GET DATA ISAV-3)
			1171	74141	(GET ADR ISAV-2)
	LINE-END	1172	75500	(CHARTV COLR)
			1173	74000	(GET COLR COLR & AND YET ANOTHER)
			1174	74040	(GET COLR ISAV-1)
			1175	51115	(JUMP CHECK-INTS & POPJI)
	HALF-WORD	1176	75504	(CHARTV BLNK)
			1177	74404	(GET BLNK BLNK & FINALLY THE END!)
			1200	51154	(JUMP WHOLE-WORD)
	LINE-EMPTY	1201	4010	(ROT COLR 10)
			1202	41204	(PUSHJ SET-DSR)
			1203	51170	(JUMP LINE-DONE)
	SET-DSR		1204	74366	(GET DATA DSR-STATE & UPDATE DISPLAY STATUS)
			1205	1343	(ANDI DATA DATA)
			1206	171777	(TV-OPTIONS-BAR)
			1207	2300	(IOR DATA COLR)
			1210	76325	(PUT DATA DSR)
			1211	76366	(PUT DATA DSR-STATE)
			1212	75600	(POPJ)	
(CALL 0 X) 	
(& CALL 1 ADR) 	
(& CALL 3 DATA) 	
(CALL 4 CNT) 
	TV-PAGE		1213	74047	(GET X SCR-VALUE & SEND SCROLL AND RESET INTERRUPT)
			1214	76022	(PUT X SCROLL)
			1215	74076	(GET X BELL-TIME & CHECK STATE OF TEXT DISPLAY)
			1216	10000	(NOP X)
			1217	120020	(BMI PAGE-END & MINUS 1 IS OFF)
			1220	134007	(BEQ PAGE-NORM & 0 IS NORMAL)
			1221	4020	(DEC X)
			1222	76076	(PUT X BELL-TIME)
			1223	130014	(BNE PAGE-END & GREATER THAN 1 IS TEMP OFF FOR BELL FL)
			1224	74077	(GET X COLOR & 1 IS END OF OFF PERIOD)
			1225	1040	(ANDI X X)
			1226	77777	(77777)
			1227	76077	(PUT X COLOR)
	PAGE-NORM	1230	74046	(GET X TOP-LINE & SET NEXT LINE TO BE DISPLAYED)
			1231	76070	(PUT X LINE)
			1232	74173	(GET ADR CRSR-REPL & AS OLD ONE)
			1233	74074	(GET X OLD-REPL)
			1234	16001	(CMP X ADR)
			1235	134001	(BEQ NO-COPY)
			1236	41242	(PUSHJ COPY-CRSR)
	NO-COPY		1237	74141	(GET ADR ISAV-2)
	PAGE-END	1240	74040	(GET X ISAV-1)
			1241	51115	(JUMP CHECK-INTS & POPJI)
	COPY-CRSR	1242	76342	(PUT DATA ISAV-3)
			1243	76444	(PUT CNT ISAV-5)
			1244	41267	(PUSHJ SWAP-FONT-MEM)
			1245	4114	(ROT ADR -4)
			1246	5161	(ADDI ADR ADR)
			1247	170000	(170000)
			1250	1000	(LOD X)
			1251	174040	(+ 170000 * 20 CRSR-IMAGE)
			1252	1400	(LOD CNT)
			1253	17	(17)
	COPY-LOOP	1254	22143	(READI ADR DATA)
			1255	363	(NOR DATA DATA & COMPLEMENTS IT)
			1256	26043	(WRITEI X DATA & TO MAKE A COMPL CRSR)
			1257	4420	(DEC CNT)
			1260	127773	(BPL COPY-LOOP)
			1261	41267	(PUSHJ SWAP-FONT-MEM)
			1262	74073	(GET X CRSR-REPL)
			1263	76074	(PUT X OLD-REPL)
			1264	74444	(GET CNT ISAV-5 & RESTORE REGS)
			1265	74342	(GET DATA ISAV-3)
			1266	75600	(POPJ)
	SWAP-FONT-MEM	1267	74066	(GET X DSR-STATE & SWITCH TO OR FROM FONT MEMORY)
			1270	3020	(XORI X X)
			1271	10000	(TV-STATE)
			1272	76025	(PUT X DSR)
			1273	76066	(PUT X DSR-STATE)
			1274	75600	(POPJ)	
(& EDIT ROUTINES FOR TEXT DISPLAY) 	
(& CALL 0 X) 	
(& CALL 0 COLR) 	
(& CALL 1 ADR) 	
(CALL 2 CHAR) 	
(& CALL 3 DATA) 	
(& CALL 4 BLNK) 	
(& CALL 4 CNT) 	
(CALL 4 TOP) 	
(CALL 5 COL) 	
(CALL 5 XCP) 	
(CALL 6 HALF) 	
(CALL 7 ZERO) 
	TV-OFF		1275	6303	(SUB DATA DATA)
			1276	41307	(PUSHJ TV-DOWN)
			1277	1000	(LOD COLR & SET STATE TO OFF)
			1300	-1	(-1)
			1301	76076	(PUT COLR BELL-TIME)
			1302	75600	(POPJ)
	TV-ON		1303	1000	(LOD COLR & SET STATE TO TURN ON)
			1304	1	(1)
			1305	76076	(PUT COLR BELL-TIME)
			1306	75600	(POPJ)
	TV-DOWN		1307	74077	(GET COLR COLOR & SUPPRESS LINE SERVICING)
			1310	3000	(IORI COLR COLR)
			1311	100000	(100000)
			1312	76077	(PUT COLR COLOR)
			1313	4010	(ROT COLR 10 & BLANK SCREEN)
			1314	2023	(XOR COLR DATA)
			1315	41204	(PUSHJ SET-DSR)
			1316	75600	(POPJ)
	TV-FLASH	1317	74077	(GET COLR COLOR)
			1320	10000	(NOP COLR)
			1321	120006	(BMI NO-FLASH)
			1322	1300	(LOD DATA)
			1323	6000	(TV-OPTIONS)
			1324	41307	(PUSHJ TV-DOWN)
			1325	1000	(LOD COLR & TURN OFF FOR ONE HALF SECOND)
			1326	4	(4)
			1327	76076	(PUT COLR BELL-TIME)
	NO-FLASH	1330	75600	(POPJ)
	TV-POS		1331	1000	(LOD COLR)
			1332	2014	(2014 & O OOO DDO OOO OOB BOO)
			1333	76077	(PUT COLR COLOR)
			1334	51115	(JUMP CHECK-INTS & POPJI)
	TV-NEG		1335	1000	(LOD COLR)
			1336	4000	(4000)
			1337	76077	(PUT COLR COLOR)
			1340	51115	(JUMP CHECK-INTS & POPJI)	
(& INTERRUPTABLE ROUTINES) 
	TV-INIT		1341	1100	(LOD ADR)
			1342	5546	(TEXT-START)
			1343	1000	(LOD X)
			1344	7733	(+ 1 + TEXT-START * 36 46)
			1345	6707	(SUB ZERO ZERO)
			1346	1400	(LOD CNT)
			1347	36	(36)
	TXT-LOOP	1350	24027	(WRITED X ZERO)
			1351	24001	(WRITE X ADR)
			1352	74100	(GET ADR X)
			1353	5060	(ADDI X X)
			1354	-45	(-45)
			1355	4420	(DEC CNT)
			1356	127771	(BPL TXT-LOOP)
			1357	1000	(LOD X)
			1360	5546	(TEXT-START)
			1361	76046	(PUT X TOP-LINE)
			1362	76071	(PUT X CRSR-LINE)
			1363	76772	(PUT ZERO CRSR-COL)
			1364	1300	(LOD DATA)
			1365	202	(CRSR-IMAGE)
			1366	1400	(LOD CNT)
			1367	1	(1)
			1370	6040	(INC X)
			1371	26044	(WRITEI X CNT)
			1372	24003	(WRITE X DATA)
			1373	1300	(LOD DATA)
			1374	200	(BLANK)
			1375	76373	(PUT DATA CRSR-REPL)
			1376	76774	(PUT ZERO OLD-REPL)
			1377	76747	(PUT ZERO SCR-VALUE)
			1400	41331	(PUSHJ TV-POS)
			1401	41303	(PUSHJ TV-ON)
			1402	1000	(LOD X)
			1403	12000	(12000)
			1404	76066	(PUT X DSR-STATE)
			1405	75500	(GET 15 X)
			1406	76022	(PUT X SCROLL)
			1407	51115	(JUMP CHECK-INTS & POPJI)
	TV-CHAR		1410	1242	(ANDI CHAR CHAR)
			1411	177	(177)
			1412	17002	(CMPI CHAR)
			1413	37	(37)
			1414	124006	(BPL CTRL-CHAR)
			1415	17002	(CMPI CHAR)
			1416	177	(177)
			1417	134026	(BEQ NULL)
	INSERT		1420	41527	(PUSHJ WRITE-CHAR)
			1421	41507	(PUSHJ INC-CRSR)
			1422	51115	(JUMP CHECK-INTS & POPJI)
	CTRL-CHAR	1423	4205	(ROT CHAR 5)
;10061[28%] LIST, 1025[20%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1424	120021	(BMI NULL)
			1425	4217	(ROT CHAR -1)
			1426	72000	(DIS BUS 17)
			1427	51446	(JUMP NULL & 0)
			1430	51451	(JUMP BACKSPACE & 10)
			1431	51453	(JUMP RUBOUT & 4)
;GC DUE TO LIST SPACE
;10106[29%] LIST, 1017[20%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1432	51460	(JUMP FORM & 14)
			1433	51541	(JUMP BEGIN-LINE & 2)
			1434	51446	(JUMP NULL & 12)
			1435	51507	(JUMP INC-CRSR & 6)
			1436	51446	(JUMP NULL & 16 WILL BE DOWN-CRSR)
			1437	51531	(JUMP HOME-CRSR & 1)
;GC DUE TO LIST SPACE
;10145[29%] LIST, 1011[20%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1440	51467	(JUMP TAB & 11)
			1441	51547	(JUMP END-LINE & 5)
			1442	51463	(JUMP NEWLINE & 15)
			1443	51446	(JUMP NULL & 3 WILL BE UP-CRSR)
			1444	51446	(JUMP NULL & 13)
;GC DUE TO LIST SPACE
;6705[24%] LIST, 1004[20%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE
;ADDING A NEW LIST SEGMENT - LIST SPACE NOW 35000 WORDS

			1445	51447	(JUMP BELL & 7)
	NULL		1446	51115	(JUMP CHECK-INTS & POPJI FOR LOTS INCLUDES HI CNTL CHRS 17 TO 30)
	BELL		1447	41317	(PUSHJ TV-FLASH)
			1450	51115	(JUMP CHECK-INTS & POPJI)
	BACKSPACE	1451	41520	(PUSHJ DEC-CRSR)
			1452	51115	(JUMP CHECK-INTS & POPJI)
;GC DUE TO LIST SPACE
;10270[28%] LIST, 776[19%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE
;ADDING A NEW FIXNUM SEGMENT - FIXNUM SPACE NOW 6000 WORDS

	RUBOUT		1453	41520	(PUSHJ DEC-CRSR)
			1454	1200	(LOD CHAR)
			1455	200	(BLANK)
			1456	41527	(PUSHJ WRITE-CHAR)
			1457	51115	(JUMP CHECK-INTS & POPJI)
	FORM		1460	41531	(PUSHJ HOME-CRSR)
;GC DUE TO LIST SPACE
;10327[29%] LIST, 1771[33%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1461	41567	(PUSHJ PAGE-CLEAR)
			1462	51115	(JUMP CHECK-INTS & POPJI)
	NEWLINE		1463	41556	(PUSHJ LINE-CLEAR)
			1464	41614	(PUSHJ NEXT-LINE)
			1465	41556	(PUSHJ LINE-CLEAR)
			1466	51115	(JUMP CHECK-INTS & POPJI)
;GC DUE TO LIST SPACE
;10366[29%] LIST, 1763[32%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

	TAB		1467	74072	(GET X CRSR-COL)
			1470	1040	(ANDI X X)
			1471	7	(7)
			1472	7000	(SUBI X X)
			1473	7	(7)
			1474	1200	(LOD CHAR)
;GC DUE TO LIST SPACE
;10441[29%] LIST, 1761[32%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1475	200	(BLANK)
	TAB-STEP	1476	41527	(PUSHJ WRITE-CHAR)
			1477	41507	(PUSHJ INC-CRSR)
			1500	4020	(DEC X)
			1501	127774	(BPL TAB-STEP)
			1502	51115	(JUMP CHECK-INTS & POPJI)
;GC DUE TO LIST SPACE
;10503[29%] LIST, 1754[32%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

	TV-QUOTE	1503	1242	(ANDI CHAR CHAR)
			1504	177	(177)
			1505	41420	(PUSHJ INSERT)
			1506	51115	(JUMP CHECK-INTS & POPJI)
	INC-CRSR	1507	74572	(GET COL CRSR-COL)
			1510	17005	(CMPI COL)
;GC DUE TO LIST SPACE
;10561[30%] LIST, 1750[32%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1511	107	(107)
			1512	134002	(BEQ END-L)
			1513	41662	(PUSHJ MOVE-RIGHT)
			1514	51115	(JUMP CHECK-INTS & POPJI)
	END-L		1515	41614	(PUSHJ NEXT-LINE)
			1516	41556	(PUSHJ LINE-CLEAR)
;GC DUE TO LIST SPACE
;10606[30%] LIST, 1743[32%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1517	51115	(JUMP CHECK-INTS & POPJI)
	DEC-CRSR	1520	74572	(GET COL CRSR-COL)
			1521	10500	(NOP COL)
			1522	134002	(BEQ BEGIN-L)
			1523	41670	(PUSHJ MOVE-LEFT)
			1524	51115	(JUMP CHECK-INTS & POPJI)
;GC DUE TO LIST SPACE
;10662[30%] LIST, 1735[32%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

	BEGIN-L		1525	41635	(PUSHJ PREV-LINE)
			1526	51115	(JUMP CHECK-INTS & POPJI)
	WRITE-CHAR	1527	76273	(PUT CHAR CRSR-REPL)
			1530	51115	(JUMP CHECK-INTS & POPJI)
	HOME-CRSR	1531	41735	(PUSHJ LIFT-CRSR)
			1532	1500	(LOD COL)
;GC DUE TO LIST SPACE
;10746[30%] LIST, 1727[31%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1533	0	(0)
			1534	76572	(PUT COL CRSR-COL)
			1535	74546	(GET COL TOP-LINE)
			1536	76571	(PUT COL CRSR-LINE)
			1537	41752	(PUSHJ SET-CRSR)
			1540	51115	(JUMP CHECK-INTS & POPJI)
;GC DUE TO LIST SPACE
;10764[30%] LIST, 1722[31%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

	BEGIN-LINE	1541	41735	(PUSHJ LIFT-CRSR)
			1542	1500	(LOD COL)
			1543	0	(0)
			1544	76572	(PUT COL CRSR-COL)
			1545	41752	(PUSHJ SET-CRSR)
			1546	51115	(JUMP CHECK-INTS & POPJI)
;GC DUE TO LIST SPACE
;11036[31%] LIST, 1715[31%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

	END-LINE	1547	41735	(PUSHJ LIFT-CRSR)
			1550	74171	(GET ADR CRSR-LINE)
			1551	6140	(INC ADR)
			1552	20105	(READ ADR COL)
			1553	76572	(PUT COL CRSR-COL)
;GC DUE TO LIST SPACE
;7473[26%] LIST, 1710[31%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1554	41752	(PUSHJ SET-CRSR)
			1555	51115	(JUMP CHECK-INTS & POPJI)
	LINE-CLEAR	1556	74171	(GET ADR CRSR-LINE)
			1557	6140	(INC ADR)
			1560	74572	(GET COL CRSR-COL)
;GC DUE TO LIST SPACE
;7523[26%] LIST, 1703[31%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1561	6540	(INC COL)
			1562	24105	(WRITE ADR COL)
			1563	1500	(LOD COL)
			1564	200	(BLANK)
			1565	76573	(PUT COL CRSR-REPL)
;GC DUE TO LIST SPACE
;7544[26%] LIST, 1677[31%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1566	51115	(JUMP CHECK-INTS & POPJI)
	PAGE-CLEAR	1567	41556	(PUSHJ LINE-CLEAR)
			1570	74171	(GET ADR CRSR-LINE)
			1571	6707	(SUB ZERO ZERO)
			1572	74446	(GET TOP TOP-LINE)
;GC DUE TO LIST SPACE
;7606[26%] LIST, 1672[31%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

	CLR-LOOP	1573	20106	(READ ADR HALF)
			1574	74106	(GET ADR HALF)
			1575	16104	(CMP ADR TOP)
			1576	134004	(BEQ CLR-DONE)
			1577	5561	(ADDI COL ADR)
;GC DUE TO LIST SPACE
;7642[26%] LIST, 1665[30%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1600	1	(1)
			1601	24507	(WRITE COL ZERO)
			1602	51573	(JUMP CLR-LOOP)
	CLR-DONE	1603	51115	(JUMP CHECK-INTS & POPJI)
	UP-LINE		1604	5161	(ADDI ADR ADR)
;GC DUE TO LIST SPACE
;7672[27%] LIST, 1661[30%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1605	-46	(-46)
			1606	17001	(CMPI ADR)
			1607	5545	(- TEXT-START 1)
			1610	120002	(BMI UP-DONE)
			1611	5161	(ADDI ADR ADR)
;GC DUE TO LIST SPACE
;7703[27%] LIST, 1655[30%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1612	2232	(* 37 46)
	UP-DONE		1613	75600	(POPJ)
	NEXT-LINE	1614	41735	(PUSHJ LIFT-CRSR)
			1615	74171	(GET ADR CRSR-LINE)
			1616	20106	(READ ADR HALF)
;GC DUE TO LIST SPACE
;7755[27%] LIST, 1650[30%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1617	74106	(GET ADR HALF)
			1620	76171	(PUT ADR CRSR-LINE)
			1621	6707	(SUB ZERO ZERO)
			1622	76772	(PUT ZERO CRSR-COL)
			1623	20106	(READ ADR HALF)
;GC DUE TO LIST SPACE
;7777[27%] LIST, 1643[30%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1624	74106	(GET ADR HALF)
			1625	74446	(GET TOP TOP-LINE)
			1626	16104	(CMP ADR TOP)
			1627	130003	(BNE MID-SCREEN)
			1630	20406	(READ TOP HALF)
;GC DUE TO LIST SPACE
;10027[27%] LIST, 1636[30%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1631	74406	(GET TOP HALF)
			1632	76446	(PUT TOP TOP-LINE)
	MID-SCREEN	1633	41752	(PUSHJ SET-CRSR)
			1634	51115	(JUMP CHECK-INTS & POPJI)
	PREV-LINE	1635	41735	(PUSHJ LIFT-CRSR)
;GC DUE TO LIST SPACE
;10073[27%] LIST, 1631[29%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1636	74171	(GET ADR CRSR-LINE)
			1637	74446	(GET TOP TOP-LINE)
			1640	16104	(CMP ADR TOP)
			1641	134007	(BEQ ROLL-UP)
			1642	41604	(PUSHJ UP-LINE)
;GC DUE TO LIST SPACE
;10106[28%] LIST, 1624[29%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1643	76171	(PUT ADR CRSR-LINE)
			1644	6140	(INC ADR)
			1645	20104	(READ ADR TOP)
			1646	76472	(PUT TOP CRSR-COL)
			1647	41752	(PUSHJ SET-CRSR)
;GC DUE TO LIST SPACE
;10137[28%] LIST, 1617[29%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1650	51115	(JUMP CHECK-INTS & POPJI)
	ROLL-UP		1651	41604	(PUSHJ UP-LINE & REALLY ROLLS THE SCREEN DOWN CRSR UP)
			1652	76171	(PUT ADR CRSR-LINE)
			1653	76146	(PUT ADR TOP-LINE)
			1654	6404	(SUB TOP TOP)
;GC DUE TO LIST SPACE
;10175[28%] LIST, 1612[29%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1655	76472	(PUT TOP CRSR-COL)
			1656	6140	(INC ADR)
			1657	24104	(WRITE ADR TOP)
			1660	41752	(PUSHJ SET-CRSR)
			1661	51115	(JUMP CHECK-INTS & POPJI)
;GC DUE TO LIST SPACE
;10216[28%] LIST, 1605[29%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

	MOVE-RIGHT	1662	41735	(PUSHJ LIFT-CRSR)
			1663	74572	(GET COL CRSR-COL)
			1664	6540	(INC COL)
			1665	76572	(PUT COL CRSR-COL)
			1666	41752	(PUSHJ SET-CRSR)
;GC DUE TO LIST SPACE
;10261[28%] LIST, 1600[29%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1667	51115	(JUMP CHECK-INTS & POPJI)
	MOVE-LEFT	1670	41735	(PUSHJ LIFT-CRSR)
			1671	74572	(GET COL CRSR-COL)
			1672	4520	(DEC COL)
			1673	76572	(PUT COL CRSR-COL)
;GC DUE TO LIST SPACE
;10311[28%] LIST, 1573[29%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1674	41752	(PUSHJ SET-CRSR)
			1675	51115	(JUMP CHECK-INTS & POPJI)
	SWAP		1676	74171	(GET ADR CRSR-LINE)
			1677	5161	(ADDI ADR ADR)
			1700	2	(2)
;GC DUE TO LIST SPACE
;10333[29%] LIST, 1567[28%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1701	74572	(GET COL CRSR-COL)
			1702	74773	(GET ZERO CRSR-REPL)
			1703	4501	(ROT COL 1)
			1704	120012	(BMI UPPER-BYTE)
			1705	4165	(ADD ADR COL)
;GC DUE TO LIST SPACE
;10370[29%] LIST, 1562[28%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1706	20103	(READ ADR DATA)
			1707	1443	(ANDI TOP DATA)
			1710	177400	(177400)
			1711	1343	(ANDI DATA DATA)
			1712	377	(377)
;GC DUE TO LIST SPACE
;10414[29%] LIST, 1560[28%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1713	2407	(IOR TOP ZERO)
			1714	76373	(PUT DATA CRSR-REPL)
			1715	24104	(WRITE ADR TOP)
			1716	75600	(POPJ)
	UPPER-BYTE	1717	1545	(ANDI COL COL)
;GC DUE TO LIST SPACE
;10462[29%] LIST, 1553[28%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1720	77777	(77777)
			1721	4165	(ADD ADR COL)
			1722	20103	(READ ADR DATA)
			1723	4310	(ROT DATA 10)
			1724	1443	(ANDI TOP DATA)
;GC DUE TO LIST SPACE
;10501[29%] LIST, 1547[28%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1725	177400	(177400)
			1726	1343	(ANDI DATA DATA)
			1727	377	(377)
			1730	2407	(IOR TOP ZERO)
			1731	76373	(PUT DATA CRSR-REPL)
;GC DUE TO LIST SPACE
;10527[29%] LIST, 1544[28%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1732	4410	(ROT TOP 10)
			1733	24104	(WRITE ADR TOP)
			1734	75600	(POPJ)
	LIFT-CRSR	1735	41676	(PUSHJ SWAP)
			1736	17007	(CMPI ZERO)
;GC DUE TO LIST SPACE
;10566[30%] LIST, 1537[28%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1737	200	(BLANK)
			1740	130010	(BNE LIFT-DONE)
			1741	74171	(GET ADR CRSR-LINE)
			1742	6140	(INC ADR)
			1743	20103	(READ ADR DATA)
;GC DUE TO LIST SPACE
;10612[30%] LIST, 1533[27%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1744	4320	(DEC DATA)
			1745	74572	(GET COL CRSR-COL)
			1746	16503	(CMP COL DATA)
			1747	130001	(BNE LIFT-DONE)
;GC DUE TO LIST SPACE
;10643[30%] LIST, 1527[27%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1750	24103	(WRITE ADR DATA)
	LIFT-DONE	1751	75600	(POPJ)
	SET-CRSR	1752	41676	(PUSHJ SWAP)
			1753	74171	(GET ADR CRSR-LINE)
			1754	6140	(INC ADR)
;GC DUE TO LIST SPACE
;7077[24%] LIST, 1522[27%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE
;ADDING A NEW LIST SEGMENT - LIST SPACE NOW 36000 WORDS

			1755	20103	(READ ADR DATA)
			1756	74572	(GET COL CRSR-COL)
			1757	16503	(CMP COL DATA)
			1760	120005	(BMI SET-DONE)
			1761	6540	(INC COL)
;GC DUE TO LIST SPACE
;10723[29%] LIST, 1515[27%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE

			1762	24105	(WRITE ADR COL)
			1763	1300	(LOD DATA)
			1764	200	(BLANK)
			1765	76373	(PUT DATA CRSR-REPL)
	SET-DONE	1766	51115	(JUMP CHECK-INTS & POPJI)
;GC DUE TO LIST SPACE
;10757[29%] LIST, 1512[27%] FIXNUM, 1000[100%] FLONUM,
; 774[99%] BIGNUM, 403[16%] SYMBOL, 762[97%] ARRAY WORDS FREE
