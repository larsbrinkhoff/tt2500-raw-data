
100	INT	122124	(JUMP INIT)
101	FD	122345	(JUMP FORWARD)
102	RT	122235	(JUMP ROTATE)
103	FD@	122542	(JUMP FORWARD@)
104	RT@	122547	(JUMP ROTATE@)
105	JMP	122574	(JUMP JUMP1)
106	CND	122554	(JUMP COND>)
107	AD	122605	(JUMP ADD)
110	ST	122577	(JUMP SETVAR)
111	HM	122211	(JUMP HOME)
112	CSUB	122500	(JUMP CALLSUB)
113	PP	122522	(JUMP POP)
114	PD	122620	(JUMP PENDOWN)
115	PU	122624	(JUMP PENUP)
116	BG	122146	(JUMP BEGIN)
117	RF	122147	(JUMP BEGIN 1)
120		126000	(NOP)
121		126000	(NOP)
122		126000	(NOP)
123		126000	(NOP)
124	INIT	6101	(MINUS S-1 D-1 $ CONSTANT 3777)
125		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
126		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
127		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
130		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
131		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
132		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
133		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
134		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
135		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
136		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
137		4141	(PLUSINC S-1 D-1 $ CONSTANT 3777)
140		6000	(MINUS S-0 D-0 $ CONSTANT 6)
141		4040	(PLUSINC S-0 D-0 $ CONSTANT 6)
142		4040	(PLUSINC S-0 D-0 $ CONSTANT 6)
143		4060	(PLUS S-0 D-0 $ CONSTANT 6)
144		66014	(S-0 TO D-MA)
145		66113	(S-1 TO D-BUS $ STORE 3777 IN RAM6)
146	BEGIN	122211	(JUMP HOME)
147		6707	(MINUS S-7 D-7 $ CONSTANT 500)
150		4747	(PLUSINC S-7 D-7 $ CONSTANT 500)
151		4767	(PLUS S-7 D-7 $ CONSTANT 500)
152		4747	(PLUSINC S-7 D-7 $ CONSTANT 500)
153		4767	(PLUS S-7 D-7 $ CONSTANT 500)
154		4767	(PLUS S-7 D-7 $ CONSTANT 500)
155		4767	(PLUS S-7 D-7 $ CONSTANT 500)
156		4767	(PLUS S-7 D-7 $ CONSTANT 500)
157		4767	(PLUS S-7 D-7 $ CONSTANT 500)
160		4767	(PLUS S-7 D-7 $ CONSTANT 500)
161	CONTINUE-USER	66714	(S-7 TO D-MA)
162		42313	(LOD S-3 $ INSTRUCTION IN REG-3)
163		64315	(FROM S-3 D-MD)
164		6740	(INC S-7)
165		6202	(MINUS S-2 D-2 $ CONSTANT 1023)
166		4242	(PLUSINC S-2 D-2 $ CONSTANT 1023)
167		4262	(PLUS S-2 D-2 $ CONSTANT 1023)
170		4262	(PLUS S-2 D-2 $ CONSTANT 1023)
171		4262	(PLUS S-2 D-2 $ CONSTANT 1023)
172		4262	(PLUS S-2 D-2 $ CONSTANT 1023)
173		4242	(PLUSINC S-2 D-2 $ CONSTANT 1023)
174		4262	(PLUS S-2 D-2 $ CONSTANT 1023)
175		4262	(PLUS S-2 D-2 $ CONSTANT 1023)
176		4242	(PLUSINC S-2 D-2 $ CONSTANT 1023)
177		4242	(PLUSINC S-2 D-2 $ CONSTANT 1023)
200		65502	(FROM S-WIR D-2)
201		62203	(JSR JAM)
202		123023	(JUMP 1023)
203	JAM	65403	(FROM S-WCM D-3)
204	NEXT	66714	(S-7 TO D-MA)
205		42013	(LOD S-0)
206		64015	(FROM S-0 D-MD)
207		6740	(INC S-7 $ INCREMENT PC)
210		45000	(RET)
211	HOME	6000	(MINUS S-0 D-0 $ X1 X2 Y1 Y2 IN RAM2-5)
212		6101	(S-1 MINUS D-1 $ 0 HDG IN RAM1)
213		62265	(JSR WRITE-1)
214		6101	(MINUS S-1 D-1 $ CONSTANT 377)
215		4141	(PLUSINC S-1 D-1 $ CONSTANT 377)
216		4141	(PLUSINC S-1 D-1 $ CONSTANT 377)
217		4141	(PLUSINC S-1 D-1 $ CONSTANT 377)
220		4141	(PLUSINC S-1 D-1 $ CONSTANT 377)
221		4141	(PLUSINC S-1 D-1 $ CONSTANT 377)
222		4141	(PLUSINC S-1 D-1 $ CONSTANT 377)
223		4141	(PLUSINC S-1 D-1 $ CONSTANT 377)
224		4141	(PLUSINC S-1 D-1 $ CONSTANT 377)
225		62265	(JSR WRITE-1)
226		126000	(NOP)
227		62265	(JSR WRITE-1)
230		126000	(NOP)
231		62265	(JSR WRITE-1)
232		126000	(NOP)
233		62265	(JSR WRITE-1)
234		122161	(JUMP CONTINUE-USER)
235	ROTATE	62204	(JSR NEXT $ PUTS NEW DATA IN REG0)
236	ROTATE1	62272	(JSR SETVAR-3 $ PLACES HDG IN S-1 360 IN S-2 110 IN S-3 TRIG IN S-4)
237		4160	(PLUS S-1 D-0 $ ASSUME INPUT IN S-0 UNNORMALIZED HDG IN S-1 TO NORMALIZE: IF <0 ADD 360 IF >360 SUB 360)
240		164243	(COND C-UN IFFALSE ADJUST-TOP)
241		4162	(PLUS S-1 D-2)
242		122250	(JUMP STORE-HDG)
243	ADJUST-TOP	6000	(MINUS S-0 D-0)
244		66200	(S-2 TO D-0)
245		6100	(MINUS D-0 S-1)
246		164250	(COND C-UN IFFALSE STORE-HDG)
247		6102	(MINUS S-1 D-2)
250	STORE-HDG	6000	(MINUS S-0 D-0)
251		62265	(JSR WRITE-1)
252		122161	(JUMP CONTINUE-USER $ SKIP STUFF FOR FD)
253	EXIT	6000	(MINUS S-0 D-0)
254		6040	(INC S-0 $ PUT 1 IN S-0)
255		62265	(JSR WRITE-1 $ EXPECTS ADDRESS IN 0 CONTENTS IN 1)
256		66201	(TO D-1 S-2 $ DONT CARE ABOUT S-1 ANY MORE)
257		62265	(JSR WRITE-1)
260		66301	(TO D-1 S-3)
261		62265	(JSR WRITE-1)
262		66401	(TO D-1 S-4)
263		62265	(JSR WRITE-1)
264		122161	(JUMP CONTINUE-USER $ BAC TO CONTINUE-USER-DISP)
265	WRITE-1	6040	(INC S-0 $ 1 TO S0)
266		66014	(TO S-0 D-MA)
267		66113	(TO S-1 D-BUS)
270		126000	(NOP)
271		45000	(RET)
272	SETVAR-3	6101	(MINUS S-1 D-1)
273		6140	(INC S-1)
274		66114	(TO S-1 D-MA $ GET HDG FROM RAM-1)
275		42113	(LOD S-1)
276		64115	(FROM S-1 D-MD)
277		6202	(MINUS S-2 D-2 $ CONSTANT 550)
300		4242	(PLUSINC S-2 D-2 $ CONSTANT 550)
301		4262	(PLUS S-2 D-2 $ CONSTANT 550)
302		4242	(PLUSINC S-2 D-2 $ CONSTANT 550)
303		4242	(PLUSINC S-2 D-2 $ CONSTANT 550)
304		4262	(PLUS S-2 D-2 $ CONSTANT 550)
305		4242	(PLUSINC S-2 D-2 $ CONSTANT 550)
306		4262	(PLUS S-2 D-2 $ CONSTANT 550)
307		4262	(PLUS S-2 D-2 $ CONSTANT 550)
310		4262	(PLUS S-2 D-2 $ CONSTANT 550)
311		6303	(MINUS S-3 D-3 $ CONSTANT 132)
312		4343	(PLUSINC S-3 D-3 $ CONSTANT 132)
313		4363	(PLUS S-3 D-3 $ CONSTANT 132)
314		4343	(PLUSINC S-3 D-3 $ CONSTANT 132)
315		4343	(PLUSINC S-3 D-3 $ CONSTANT 132)
316		4363	(PLUS S-3 D-3 $ CONSTANT 132)
317		4343	(PLUSINC S-3 D-3 $ CONSTANT 132)
320		4363	(PLUS S-3 D-3 $ CONSTANT 132)
321		45000	(RET)
322	READ-4	6404	(MINUS S-4 D-4)
323		6440	(INC S-4)
324		6440	(INC S-4 $ GET READY TO POINT TO RAM (2))
325		66414	(TO S-4 D-MA)
326		42113	(LOD S-1)
327		64115	(FROM S-1 D-MD)
330		6440	(INC S-4)
331		66414	(TO S-4 D-MA)
332		42213	(LOD S-2)
333		64215	(FROM S-2 D-MD)
334		6440	(INC S-4)
335		66414	(TO S-4 D-MA)
336		42313	(LOD S-3)
337		64315	(FROM S-3 D-MD)
340		6440	(INC S-4)
341		66414	(TO S-4 D-MA)
342		42413	(LOD S-4)
343		64415	(FROM S-4 D-MD)
344		45000	(RET)
345	FORWARD	62204	(JSR NEXT $ GET INPUT AND PUT IT IN R0)
346	FORWARD1	6101	(S-1 MINUS D-1 $ DX DY IN R5 R6)
347		6140	(INC S-1)
350		66114	(S-1 TO D-MA)
351		42113	(LOD S-1 $ S-1 HDG)
352		6303	(MINUS S-3 D-3 $ CONSTANT 132)
353		4343	(PLUSINC S-3 D-3 $ CONSTANT 132)
354		4363	(PLUS S-3 D-3 $ CONSTANT 132)
355		4343	(PLUSINC S-3 D-3 $ CONSTANT 132)
356		4343	(PLUSINC S-3 D-3 $ CONSTANT 132)
357		4363	(PLUS S-3 D-3 $ CONSTANT 132)
360		4343	(PLUSINC S-3 D-3 $ CONSTANT 132)
361		4363	(PLUS S-3 D-3 $ CONSTANT 132)
362		6103	(S-1 MINUS D-3 $ FIND QUADRANT HDG-90)
363		124441	(COND C-UN FORWARD++ $ IFT MEANS HDG <=90)
364		6103	(S-1 MINUS D-3)
365		124407	(COND C-UN FORWARD+- $ IFT 90<HDG<180)
366		6103	(S-1 MINUS D-3)
367		124424	(COND C-UN FORWARD--)
370		6103	(S-1 MINUS D-3)
371		124372	(COND C-UN FORWARD-+)
372	FORWARD-+	62456	(JSR TRIG)
373		62322	(JSR READ-4)
374		4265	(PLUS S-2 D-5)
375		160400	(COND C-UC IFFALSE YINC-+)
376		4120	(DEC S-1)
377		46000	(DISX)
400	YINC-+	4466	(PLUS S-4 D-6)
401		160404	(COND C-UC IFFALSE COUNT-+)
402		6340	(INC S-3)
403		47000	(DISY)
404	COUNT-+	4020	(DEC S-0)
405		124253	(COND C-UN EXIT)
((BYTE OVERLAP WARNING ONLY) (JUMP FORWARD-+ 2)) 
406		122374	(JUMP FORWARD-+ 2)
407	FORWARD+-	62456	(JSR TRIG)
410		62322	(JSR READ-4)
411		4265	(PLUS S-2 D-5)
412		160415	(COND C-UC IFFALSE YINC+-)
413		6140	(INC S-1)
414		46000	(DISX)
415	YINC+-	4466	(PLUS S-4 D-6)
416		160421	(COND C-UC IFFALSE COUNT+-)
417		4320	(DEC S-3)
420		47000	(DISY)
421	COUNT+-	4020	(DEC S-0)
422		124253	(COND C-UN EXIT)
((BYTE OVERLAP WARNING ONLY) (JUMP FORWARD+- 2)) 
423		122411	(JUMP FORWARD+- 2)
424	FORWARD--	62456	(JSR TRIG)
425		62322	(JSR READ-4)
426		4266	(PLUS S-2 D-6)
427		160432	(COND C-UC IFFALSE YINC--)
430		4120	(DEC S-1)
431		46000	(DISX)
432	YINC--	4465	(PLUS S-4 D-5)
433		160436	(COND C-UC IFFALSE COUNT--)
434		4320	(DEC S-3)
435		47000	(DISY)
436	COUNT--	4020	(DEC S-0)
437		124253	(COND C-UN EXIT)
440		122426	(JUMP FORWARD-- 2)
441	FORWARD++	62456	(JSR TRIG)
442		62322	(JSR READ-4)
443		4266	(PLUS S-2 D-6)
444		160447	(COND C-UC IFFALSE YINC++)
445		6140	(INC S-1)
446		46000	(DISX)
447	YINC++	4465	(PLUS S-4 D-5)
450		160453	(COND C-UC IFFALSE COUNT++)
451		6340	(INC S-3)
452		47000	(DISY)
453	COUNT++	4020	(DEC S-0)
454		124253	(COND C-UN EXIT)
455		122443	(JUMP FORWARD++ 2)
456	TRIG	4163	(S-1 PLUS D-3 $ RESTORE HDG TO POSITIVE)
457		6606	(MINUS S-6 D-6 $ CONSTANT 100)
460		4646	(PLUSINC S-6 D-6 $ CONSTANT 100)
461		4666	(PLUS S-6 D-6 $ CONSTANT 100)
462		4666	(PLUS S-6 D-6 $ CONSTANT 100)
463		4666	(PLUS S-6 D-6 $ CONSTANT 100)
464		4666	(PLUS S-6 D-6 $ CONSTANT 100)
465		4666	(PLUS S-6 D-6 $ CONSTANT 100)
466		4666	(PLUS S-6 D-6 $ CONSTANT 100)
467		4166	(S-1 PLUS D-6 $ LOCATION OF ABS (SIN HDG))
470		66114	(S-1 TO D-MA $ ADDRESS OF SIN (HDG))
471		42513	(LOD S-5 $ DELTAX IN REG-5)
472		64515	(FROM S-5 D-MD)
473		4163	(PLUS S-1 D-3 $ 100+HDG+90)
474		66114	(S-1 TO D-MA $ ADDRESS OF COS (HDG))
475		42613	(LOD S-6 $ DELTA Y IN REG-6)
476		64615	(FROM S-6 D-MD)
477		45000	(RET)
500	CALLSUB	6202	(MINUS S-2 D-2 $ CONSTANT 6)
501		4242	(PLUSINC S-2 D-2 $ CONSTANT 6)
502		4242	(PLUSINC S-2 D-2 $ CONSTANT 6)
503		4262	(PLUS S-2 D-2 $ CONSTANT 6)
504		66214	(S-2 TO D-MA)
505		42113	(LOD S-1)
506		64115	(FROM S-1 D-MD)
507		4120	(DEC S-1)
510		66007	(S-0 TO D-7)
511		62204	(JSR NEXT $ GET TOP OF PDL)
512		66114	(S-1 TO D-MA)
513		66713	(S-7 TO D-BUS $ SAVES OLD PC)
514		126000	(NOP)
515		66214	(S-2 TO D-MA)
516		66113	(S-1 TO D-BUS $ SAVE NEW PDL)
517		126000	(NOP)
520		66007	(S-0 TO D-7)
521		122161	(JUMP CONTINUE-USER)
522	POP	6000	(MINUS S-0 D-0 $ CONSTANT 6)
523		4040	(PLUSINC S-0 D-0 $ CONSTANT 6)
524		4040	(PLUSINC S-0 D-0 $ CONSTANT 6)
525		4060	(PLUS S-0 D-0 $ CONSTANT 6)
526		66014	(S-0 TO D-MA $ PDL POINTER IN THE ADDRESS)
527		42113	(LOD S-1 $ GET THE PDL LEADER)
530		64115	(FROM S-1 D-MD)
531		66114	(S-1 TO D-MA)
532		42713	(LOD S-7)
533		64715	(FROM S-7 D-MD)
534		66014	(S-0 TO D-MA)
535		42113	(LOD S-1)
536		64115	(FROM S-1 D-MD)
537		6140	(INC S-1)
540		66113	(S-1 TO D-BUS $ INCREASE BY 1 AND PUT PDL LEADER BACK)
541		122161	(JUMP CONTINUE-USER)
542	FORWARD@	62204	(JSR NEXT)
543		66014	(S-0 TO D-MA)
544		42013	(LOD S-0)
545		64015	(FROM S-0 D-MD)
546		122346	(JUMP FORWARD1)
547	ROTATE@	62204	(JSR NEXT)
550		66014	(S-0 TO D-MA)
551		42013	(LOD S-0)
552		64015	(FROM S-0 D-MD)
553		122236	(JUMP ROTATE1)
554	COND>	62204	(JSR NEXT $ COND (CONST VAR ADDR FOR VAR> ADDR FOR VAR<))
555		66014	(S-0 TO D-MA)
556		42113	(LOD S-1 $ CONSTANT IN REG-1)
557		64115	(FROM S-1 D-MD)
560		62204	(JSR NEXT)
561		66014	(S-0 TO D-MA)
562		42213	(LOD S-2 $ VARIABLE IN REG-2)
563		64215	(FROM S-2 D-MD)
564		6201	(MINUS S-2 D-1)
565		124571	(COND C-UN VARLESS)
566		62204	(JSR NEXT)
567		66007	(S-0 TO D-7)
570		122161	(JUMP CONTINUE-USER)
571	VARLESS	62204	(JSR NEXT)
572		66007	(S-0 TO D-7)
573		122161	(JUMP CONTINUE-USER)
574	JUMP1	62204	(JSR NEXT)
575		66007	(S-0 TO D-7)
576		122146	(JUMP BEGIN)
577	SETVAR	62204	(JSR NEXT)
600		66014	(S-0 TO D-MA)
601		62204	(JSR NEXT)
602		66013	(S-0 TO D-BUS)
603		126000	(NOP)
604		122161	(JUMP CONTINUE-USER)
605	ADD	62204	(JSR NEXT $ ADD VAR NUM -- INC CONTENT OF RAM (VAR) BY NUM)
606		66014	(S-0 TO D-MA $ PUT VAR IN MA)
607		42213	(LOD S-2 $ CONTENTS OF VAR IN R-2)
610		64215	(FROM S-2 D-MD)
611		66001	(S-0 TO D-1 $ PRESERVE POINTER TO VAR)
612		62204	(JSR NEXT $ NUM IN R-0)
613		4260	(PLUS S-2 D-0 $ NEW VALUE FOR VAR)
614		66114	(S-1 TO D-MA $ PUT IT AWAY)
615		66213	(S-2 TO D-BUS)
616		126000	(NOP)
617		122161	(JUMP CONTINUE-USER)
620	PENDOWN	6000	(S-0 MINUS D-0)
621		4020	(DEC S-0)
622		440004	(440004)
623		122161	(JUMP CONTINUE-USER)
624	PENUP	6000	(S-0 MINUS D-0)
625		440004	(440004)
626		122161	(JUMP CONTINUE-USER)